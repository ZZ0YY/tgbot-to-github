# /.github/workflows/create_release_asset.yml

name: 通过 GitHub CLI (gh) 创建 Release Asset

on:
  repository_dispatch:
    types: [upload_file_to_release]
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write

    steps:
      - name: 1. 检出代码
        uses: actions/checkout@v4

      - name: 2. 设置 Python 环境
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: 3. 安装 Python 依赖
        run: python -m pip install requests

      - name: 4. 从 Telegram 下载文件
        # --- 核心修改：为步骤增加一个 ID ---
        id: download
        # --------------------------------
        timeout-minutes: 60
        env:
          BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          FILE_ID: ${{ github.event.client_payload.file_id }}
          ORIGINAL_FILE_NAME_B64: ${{ github.event.client_payload.original_file_name_b64 }}
        run: python download_script.py

      - name: 5. 获取用于 Release 的日期标签
        id: date
        run: echo "today=$(TZ='Asia/Shanghai' date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
        
      - name: 6. 创建或找到 Release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_TAG="daily-backup-${{ steps.date.outputs.today }}"
          if ! gh release view "$RELEASE_TAG" > /dev/null 2>&1; then
            echo "Release '$RELEASE_TAG' does not exist. Creating it..."
            gh release create "$RELEASE_TAG" --title "Daily Backup - ${{ steps.date.outputs.today }}" --notes "Automated daily backup of files."
          else
            echo "Release '$RELEASE_TAG' already exists."
          fi
          echo "release_tag=$RELEASE_TAG" >> $GITHUB_OUTPUT

      - name: 7. 上传文件到 Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_TAG="${{ steps.create_release.outputs.release_tag }}"
          # --- 核心修改：不再使用通配符 *，而是使用上一步输出的精确路径 ---
          FILE_TO_UPLOAD="${{ steps.download.outputs.downloaded_file_path }}"
          echo "Uploading '$FILE_TO_UPLOAD' to Release '$RELEASE_TAG'..."
          gh release upload "$RELEASE_TAG" "$FILE_TO_UPLOAD" --clobber
          # -------------------------------------------------------------