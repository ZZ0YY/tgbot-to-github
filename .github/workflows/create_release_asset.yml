# .github/workflows/create_release_asset.yml

name: Create Release Asset from Telegram File

on:
  repository_dispatch:
    types: [upload_file_to_release]

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: 'Debug: Print client payload'
        run: echo '${{ toJSON(github.event.client_payload) }}'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: python -m pip install requests

      - name: Download file from Telegram
        id: download
        timeout-minutes: 20 # 为下载大文件设置超时
        env:
          BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          FILE_ID: ${{ github.event.client_payload.file_id }}
          # --- 核心修改：传递 Base64 编码的文件名 ---
          FILE_NAME_B64: ${{ github.event.client_payload.file_name_b64 }}
          # ----------------------------------------
        run: python download_script.py

      - name: Get current date
        id: date
        run: echo "today=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Create or Update Release and Upload Asset
        timeout-minutes: 30 # 为上传大文件设置超时
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.download.outputs.downloaded_file_name }}
          tag_name: "daily-backup-${{ steps.date.outputs.today }}"
          name: "Daily Backup - ${{ steps.date.outputs.today }}"
          body: |
            Files automatically uploaded from Telegram on ${{ steps.date.outputs.today }}.
            This release is automatically managed.